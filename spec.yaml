openapi: 3.0.0
info:
  title: Chat App REST API Docs
  version: 1.0.0
  description: This is a simple CRUD API application made with Express and documented with Swagger
paths:
  /userInfo:
    get:
      summary: Gets all User Info
      description: Gets all Users and their corresponding details
      responses:
        "200":
          description: A JSON array of users and corresponding details
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userID:
                      type: number
                      example: 12345
                    email:
                      type: string
                      example: sample@gmail.com
                    username:
                      type: string
                      example: Mike Jones
                    bio:
                      type: string
                      example: I like to bike
                  required:
                    - userID
                    - email
                    - username
                    - bio
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError500"
  /user:
    post:
      summary: Create a new User
      description: Create a new User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: Mike123@gmail.com
                password:
                  type: string
                  example: password123
              required:
                - email
                - password
      responses:
        "201":
          description: Successfully created User
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User created successfully
                required:
                  - message
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequest400"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError500"
    delete:
      summary: Delete a User
      description: Remove a User and their data from our records
      parameters:
        - name: userID
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: string
            example: 12345
      responses:
        "200":
          description: Successfully deleted User and Details
        "400":
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequest400"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError500"
components:
  schemas:
    InvalidRequest400:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Error text.
          example: Incorrectly formatted request
      required:
        - error
    ServerError500:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Error text.
          example: Internal Server Error
      required:
        - error
